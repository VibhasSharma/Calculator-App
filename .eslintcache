[{"E:\\e\\Study material\\NodeMysql\\React Apps\\calculator_app\\src\\index.js":"1","E:\\e\\Study material\\NodeMysql\\React Apps\\calculator_app\\src\\App.js":"2","E:\\e\\Study material\\NodeMysql\\React Apps\\calculator_app\\src\\components\\Button.component.jsx":"3","E:\\e\\Study material\\NodeMysql\\React Apps\\calculator_app\\src\\components\\Input.component.jsx":"4","E:\\e\\Study material\\NodeMysql\\React Apps\\calculator_app\\src\\components\\ClearButton.component.jsx":"5"},{"size":221,"mtime":1610514138176,"results":"6","hashOfConfig":"7"},{"size":2958,"mtime":1611406614443,"results":"8","hashOfConfig":"7"},{"size":538,"mtime":1610685928607,"results":"9","hashOfConfig":"7"},{"size":279,"mtime":1610685368028,"results":"10","hashOfConfig":"7"},{"size":306,"mtime":1611404857601,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"5e9ym7",{"filePath":"15","messages":"16","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\e\\Study material\\NodeMysql\\React Apps\\calculator_app\\src\\index.js",[],["24","25"],"E:\\e\\Study material\\NodeMysql\\React Apps\\calculator_app\\src\\App.js",["26","27","28","29"],"import React, {Component} from 'react';\nimport Button from './components/Button.component';\nimport Input from './components/Input.component';\nimport ClearButton from './components/ClearButton.component';\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      input: \"\",\n      previousNumber: \"\",\n      currentNumber: \"\",\n      operator: \"\",\n    };\n  }\n\n  addToInput = (value) => {\n    this.setState({input: this.state.input + value});\n  };\n\n  addZeroToInput = (value) => {\n    // add zero to input only if the input is ot empty\n    if(this.state.input !== \"\"){\n      this.setState({input: this.state.input + value});\n    }\n  };\n\n  addDecimalInput = (value) => {\n    // add decimal if there is no current decimal point in input area\n    if(this.state.input.indexOf(\".\") === -1){\n      this.setState({input: this.state.input + value});\n    }\n  };\n\n  clearInput = () => {\n    this.setState({input: \"\"});\n  };\n\n  add = () => {\n    this.state.previousNumber = this.state.input;\n    this.setState({input: \"\"});\n    this.state.operator = \"plus\";\n  };\n\n  evaluate = () => {\n    this.state.currentNumber = this.state.input;\n\n    if(this.state.operator == \"plus\"){\n      this.setState({\n        input: parseInt(this.state.previousNumber) + parseInt(this.state.currentNumber)\n      })\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1 className=\"header\">Calculator App</h1>\n        <div className=\"App\">\n          <div className=\"calc-wrapper\">\n            <div>\n              <Input>{this.state.input}</Input>\n            </div>\n            <div className=\"row\">\n              <Button handleClick={this.addToInput}>7</Button>\n              <Button handleClick={this.addToInput}>8</Button>\n              <Button handleClick={this.addToInput}>9</Button>\n              <Button>/</Button>\n            </div>\n            <div className=\"row\">\n              <Button handleClick={this.addToInput}>4</Button>\n              <Button handleClick={this.addToInput}>5</Button>\n              <Button handleClick={this.addToInput}>6</Button>\n              <Button>*</Button>\n            </div>\n            <div className=\"row\">\n              <Button handleClick={this.addToInput}>1</Button>\n              <Button handleClick={this.addToInput}>2</Button>\n              <Button handleClick={this.addToInput}>3</Button>\n              <Button handleClick={this.add}>+</Button>\n            </div>\n            <div className=\"row\">\n              <Button handleClick={this.addDecimalInput}>.</Button>\n              <Button handleClick={this.addZeroToInput}>0</Button>\n              <Button handleClick={this.evaluate}>=</Button>\n              <Button>-</Button>\n            </div>\n            <div className=\"row\">\n              <ClearButton handleClear={this.clearInput}>Clear</ClearButton>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n  \n}\n\nexport default App;\n","E:\\e\\Study material\\NodeMysql\\React Apps\\calculator_app\\src\\components\\Button.component.jsx",[],"E:\\e\\Study material\\NodeMysql\\React Apps\\calculator_app\\src\\components\\Input.component.jsx",[],"E:\\e\\Study material\\NodeMysql\\React Apps\\calculator_app\\src\\components\\ClearButton.component.jsx",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":43,"column":5,"nodeType":"36","endLine":43,"endColumn":15},{"ruleId":"34","severity":1,"message":"35","line":45,"column":5,"nodeType":"36","endLine":45,"endColumn":15},{"ruleId":"34","severity":1,"message":"35","line":49,"column":5,"nodeType":"36","endLine":49,"endColumn":15},{"ruleId":"37","severity":1,"message":"38","line":51,"column":28,"nodeType":"39","messageId":"40","endLine":51,"endColumn":30},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]